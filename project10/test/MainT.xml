<class>
  <keyword>  </keyword>
  <identifier> Main </identifier>
  <symbol> { </symbol>
  <subroutineDec>
    <keyword> function </keyword>
    <keyword> void </keyword>
    <identifier> main </identifier>
    <symbol> ( </symbol>
    <parameterList>
    </parameterList>
    <symbol> ) </symbol>
    <subroutineBody>
      <symbol> { </symbol>
      <varDec>
        <keyword> var </keyword>
        <identifier> Array </identifier>
        <identifier> a </identifier>
        <symbol> ; </symbol>
      </varDec>
      <varDec>
        <keyword> var </keyword>
        <identifier> int </identifier>
        <identifier> length </identifier>
        <symbol> ; </symbol>
      </varDec>
      <varDec>
        <keyword> var </keyword>
        <identifier> int </identifier>
        <identifier> i </identifier>
        <symbol> , </symbol>
        <identifier> sum </identifier>
        <symbol> ; </symbol>
      </varDec>
      <statements>
        <letStatement>
          <keyword> let </keyword>
          <identifier> a </identifier>
          <symbol> = </symbol>
          <expression>
            <term>
              <identifier> Array </identifier>
              <symbol> . </symbol>
              <identifier> . </identifier>
              <symbol> . </symbol>
              <expressionList>
                <expression>
                  <term>
                    <symbol> ( </symbol>
                    <expression>
                      <term>
                        <identifier> length </identifier>
                      </term>
                    </expression>
                    <symbol> ; </symbol>
                    <keyword> let </keyword>
                    <identifier> i </identifier>
                  </term>
                </expression>
                <expression>
                  <term>
                    <symbol> ( </symbol>
                    <expression>
                      <term>
                        <identifier> i </identifier>
                      </term>
                    </expression>
                    <symbol> ) </symbol>
                  </term>
                </expression>
                <expression>
                  <term>
                  </term>
                  <symbol> = </symbol>
                  <term>
                    <identifier> Keyboard </identifier>
                    <symbol> . </symbol>
                    <identifier> . </identifier>
                    <symbol> . </symbol>
                    <expressionList>
                      <expression>
                        <term>
                          <symbol> ( </symbol>
                          <expression>
                            <term>
                              <stringConstant> ENTER THE NEXT NUMBER:  </stringConstant>
                            </term>
                          </expression>
                          <symbol> ; </symbol>
                          <keyword> let </keyword>
                          <identifier> i </identifier>
                        </term>
                        <symbol> + </symbol>
                        <term>
                          <integerConstant> 1 </integerConstant>
                        </term>
                      </expression>
                      <expression>
                        <term>
                          <identifier> i </identifier>
                        </term>
                      </expression>
                      <expression>
                        <term>
                          <identifier> sum </identifier>
                        </term>
                      </expression>
                      <expression>
                        <term>
                          <symbol> ( </symbol>
                          <expression>
                            <term>
                              <identifier> i </identifier>
                            </term>
                          </expression>
                          <symbol> ) </symbol>
                        </term>
                        <symbol> = </symbol>
                        <term>
                          <identifier> sum </identifier>
                        </term>
                      </expression>
                      <expression>
                        <term>
                        </term>
                      </expression>
                      <expression>
                        <term>
                          <identifier> i </identifier>
                        </term>
                        <symbol> + </symbol>
                        <term>
                          <integerConstant> 1 </integerConstant>
                        </term>
                      </expression>
                      <expression>
                        <term>
                          <identifier> Output </identifier>
                          <symbol> . </symbol>
                          <identifier> . </identifier>
                          <symbol> . </symbol>
                          <expressionList>
                            <expression>
                              <term>
                                <symbol> ( </symbol>
                                <expression>
                                  <term>
                                    <stringConstant> THE AVERAGE IS:  </stringConstant>
                                  </term>
                                </expression>
                                <symbol> ; </symbol>
                                <keyword> do </keyword>
                                <identifier> Output </identifier>
                                <symbol> . </symbol>
                                <identifier> . </identifier>
                                <symbol> . </symbol>
                                <expressionList>
                                  <expression>
                                    <term>
                                      <symbol> ( </symbol>
                                      <expression>
                                        <term>
                                          <identifier> sum </identifier>
                                        </term>
                                      </expression>
                                      <symbol> ) </symbol>
                                    </term>
                                  </expression>
                                  <expression>
                                    <term>
                                      <symbol> ( </symbol>
                                      <expression>
                                        <term>
                                        </term>
                                      </expression>
                                      <symbol> ; </symbol>
                                      <keyword> return </keyword>
                                    </term>
                                  </expression>
                                  <expression>
                                    <term>
                                    </term>
                                  </expression>
                                </expressionList>
                                <symbol> None </symbol>
                              </term>
                            </expression>
                          </expressionList>
                          <symbol> None </symbol>
                        </term>
                      </expression>
                    </expressionList>
                    <symbol> None </symbol>
                  </term>
                </expression>
              </expressionList>
              <symbol> None </symbol>
            </term>
          </expression>
          ;
        </letStatement>
      </statements>
      <symbol> None </symbol>
    </subroutineBody>
  </subroutineDec>
</class>
