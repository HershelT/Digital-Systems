class LongNum {
    field int leftSide;
    field int rightSide;

    constructor LongNum new() {
        let leftSide = 0;
        let rightSide = 0;
        return this;
    }

    // Add two longs
    method void addLong(LongNum other) {
        // Add the right side
        let rightSide = rightSide + other.getRightSide();
        // If the right side is greater than 9999 then add 1 to the left side
        if (rightSide > 9999) {
            let leftSide = leftSide + 1;
            let rightSide = rightSide - 10000;
        }
        // Add the left side
        let leftSide = leftSide + other.getLeftSide();
        return;
    }


    // Gets the value of the long
    method void add(int amount) {
        while (amount > 9999) {
            let leftSide = leftSide + 1;
            let amount = amount - 10000;
        }

        let rightSide = rightSide + amount;
        while (rightSide > 9999) {
            let leftSide = leftSide + 1;
            let rightSide = rightSide - 10000;
        }
        return;
    }
    
    // Subtract two longs
    method void subtractLong(LongNum other) {
        // Subtract the right side
        let rightSide = rightSide - other.getRightSide();
        // If the right side is less than 0 then subtract 1 from the left side
        if (rightSide < 0) {
            let leftSide = leftSide - 1;
            let rightSide = rightSide + 10000;
        }
        // Subtract the left side
        let leftSide = leftSide - other.getLeftSide();
        return;
    }


    // Subtract the value of the long
    method void subtract(int amount) {
        while (amount > 0) {
            // If the right side is less than the amount then the left side needs to be subtracted by 1
            if (rightSide < amount) {
                let leftSide = leftSide - 1;
                let rightSide = 10000 - amount;
                let amount = amount - 10000;
            }
            // otherwise just subtract the right side
            else {
                let rightSide = rightSide - amount;
                let amount = amount - 10000;    
            }   
        }
        return;
    }

    // Icheck if the long is greater than another long
    method boolean greaterThan(LongNum other) {
        if (leftSide > other.getLeftSide()) {
            return true;
        }
        else {
            if (leftSide = other.getLeftSide()) {
                if (rightSide > other.getRightSide()) {
                    return true;
                }
            }
        }
        return false;
    }


    method int getLeftSide() {
        return leftSide;
    }

    method int getRightSide() {
        return rightSide;
    }

    method void toString() {
        // Total zeros before right side
        var int totalZerosBeforeRight;
        var int i;
        var String right;
        let i = 0;
        let right = String.new(10);
        do right.setInt(rightSide);
        let totalZerosBeforeRight = 4 - right.length();

        // Print both sides together
        do Output.printInt(leftSide);
        let i = 0;
        while (i < totalZerosBeforeRight) {
            do Output.printString("0");
            let i = i + 1;
        }
        do Output.printInt(rightSide);

        // Put the left and right side together
        
        return;
}
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
}

