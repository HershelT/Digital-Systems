function LongNum.new 0
    push constant 2
    call Memory.alloc 1
    pop pointer 0
    push constant 0
    pop this 0
    push constant 0
    pop this 1
    push pointer 0
    return
function LongNum.get 0
    push argument 0
    pop pointer 0
    push pointer 0
    return
function LongNum.getLeftSide 0
    push argument 0
    pop pointer 0
    push this 0
    return
function LongNum.getRightSide 0
    push argument 0
    pop pointer 0
    push this 1
    return
function LongNum.addLong 0
    push argument 0
    pop pointer 0
    push this 1
    push argument 1
    call LongNum.getRightSide 1
    add
    pop this 1
    push this 1
    push constant 9999
    gt
    not
    if-goto LongNum_1
    push this 0
    push constant 1
    add
    pop this 0
    push this 1
    push constant 10000
    sub
    pop this 1
    goto LongNum_0
label LongNum_1
label LongNum_0
    push this 0
    push argument 1
    call LongNum.getLeftSide 1
    add
    pop this 0
    push constant 0
    return
function LongNum.add 0
    push argument 0
    pop pointer 0
label LongNum_2
    push argument 1
    push constant 9999
    gt
    not
    if-goto LongNum_3
    push this 0
    push constant 1
    add
    pop this 0
    push argument 1
    push constant 10000
    sub
    pop argument 1
    goto LongNum_2
label LongNum_3
    push this 1
    push argument 1
    add
    pop this 1
label LongNum_4
    push this 1
    push constant 9999
    gt
    not
    if-goto LongNum_5
    push this 0
    push constant 1
    add
    pop this 0
    push this 1
    push constant 10000
    sub
    pop this 1
    goto LongNum_4
label LongNum_5
    push constant 0
    return
function LongNum.set 0
    push argument 0
    pop pointer 0
    push argument 1
    call LongNum.getLeftSide 1
    pop this 0
    push argument 1
    call LongNum.getRightSide 1
    pop this 1
    push constant 0
    return
function LongNum.subtractLong 0
    push argument 0
    pop pointer 0
    push this 1
    push argument 1
    call LongNum.getRightSide 1
    sub
    pop this 1
    push this 1
    push constant 0
    lt
    not
    if-goto LongNum_7
    push this 0
    push constant 1
    sub
    pop this 0
    push this 1
    push constant 10000
    add
    pop this 1
    goto LongNum_6
label LongNum_7
label LongNum_6
    push this 0
    push argument 1
    call LongNum.getLeftSide 1
    sub
    pop this 0
    push constant 0
    return
function LongNum.subtract 0
    push argument 0
    pop pointer 0
label LongNum_8
    push argument 1
    push constant 0
    gt
    not
    if-goto LongNum_9
    push this 1
    push argument 1
    lt
    not
    if-goto LongNum_11
    push this 0
    push constant 1
    sub
    pop this 0
    push constant 10000
    push argument 1
    sub
    pop this 1
    push argument 1
    push constant 10000
    sub
    pop argument 1
    goto LongNum_10
label LongNum_11
    push this 1
    push argument 1
    sub
    pop this 1
    push argument 1
    push constant 0
    gt
    not
    if-goto LongNum_13
    push argument 1
    push constant 10000
    sub
    pop argument 1
    goto LongNum_12
label LongNum_13
    push constant 0
    pop argument 1
label LongNum_12
label LongNum_10
    goto LongNum_8
label LongNum_9
    push constant 0
    return
function LongNum.divideLong 1
    push argument 0
    pop pointer 0
    call LongNum.new 0
    pop local 0
    push argument 1
    call LongNum.getLeftSide 1
    push constant 0
    eq
    not
    if-goto LongNum_15
    push argument 1
    call LongNum.getRightSide 1
    push constant 0
    eq
    not
    if-goto LongNum_17
    push pointer 0
    push local 0
    call LongNum.set 2
    pop temp 0
    push local 0
    call Memory.deAlloc 1
    pop temp 0
    push constant 0
    return
    goto LongNum_16
label LongNum_17
label LongNum_16
    goto LongNum_14
label LongNum_15
label LongNum_14
label LongNum_18
    push pointer 0
    push argument 1
    call LongNum.greaterThanLong 2
    not
    if-goto LongNum_19
    push pointer 0
    push argument 1
    call LongNum.subtractLong 2
    pop temp 0
    push local 0
    push constant 1
    call LongNum.add 2
    pop temp 0
    goto LongNum_18
label LongNum_19
    push pointer 0
    push local 0
    call LongNum.set 2
    pop temp 0
    push local 0
    call Memory.deAlloc 1
    pop temp 0
    push constant 0
    return
function LongNum.multiplyLong 2
    push argument 0
    pop pointer 0
    call LongNum.new 0
    pop local 1
    call LongNum.new 0
    pop local 0
    push argument 1
    call LongNum.getLeftSide 1
    push constant 0
    eq
    not
    if-goto LongNum_21
    push argument 1
    call LongNum.getRightSide 1
    push constant 0
    eq
    not
    if-goto LongNum_23
    push constant 0
    pop this 0
    push constant 0
    pop this 1
    push local 0
    call Memory.deAlloc 1
    pop temp 0
    push local 1
    call Memory.deAlloc 1
    pop temp 0
    push constant 0
    return
    goto LongNum_22
label LongNum_23
label LongNum_22
    goto LongNum_20
label LongNum_21
label LongNum_20
    push local 0
    push constant 1
    call LongNum.add 2
    pop temp 0
    push local 1
    push pointer 0
    call LongNum.set 2
    pop temp 0
label LongNum_24
    push argument 1
    push local 0
    call LongNum.greaterThanLong 2
    not
    if-goto LongNum_25
    push pointer 0
    push local 1
    call LongNum.addLong 2
    pop temp 0
    push local 0
    push constant 1
    call LongNum.add 2
    pop temp 0
    goto LongNum_24
label LongNum_25
    push local 0
    call Memory.deAlloc 1
    pop temp 0
    push local 1
    call Memory.deAlloc 1
    pop temp 0
    push constant 0
    return
function LongNum.greaterThanLong 0
    push argument 0
    pop pointer 0
    push this 0
    push argument 1
    call LongNum.getLeftSide 1
    gt
    not
    if-goto LongNum_27
    push constant 1
    neg
    return
    goto LongNum_26
label LongNum_27
    push this 0
    push argument 1
    call LongNum.getLeftSide 1
    eq
    not
    if-goto LongNum_29
    push this 1
    push argument 1
    call LongNum.getRightSide 1
    gt
    not
    if-goto LongNum_31
    push constant 1
    neg
    return
    goto LongNum_30
label LongNum_31
label LongNum_30
    goto LongNum_28
label LongNum_29
label LongNum_28
label LongNum_26
    push constant 0
    return
function LongNum.greaterThanOrEqualLong 0
    push argument 0
    pop pointer 0
    push argument 1
    call LongNum.getRightSide 1
    push constant 0
    eq
    not
    if-goto LongNum_33
    push argument 1
    call LongNum.getLeftSide 1
    push constant 0
    eq
    not
    if-goto LongNum_35
    push constant 1
    neg
    return
    goto LongNum_34
label LongNum_35
label LongNum_34
    goto LongNum_32
label LongNum_33
label LongNum_32
    push this 0
    push argument 1
    call LongNum.getLeftSide 1
    gt
    not
    if-goto LongNum_37
    push constant 1
    neg
    return
    goto LongNum_36
label LongNum_37
    push this 0
    push argument 1
    call LongNum.getLeftSide 1
    eq
    not
    if-goto LongNum_39
    push this 1
    push argument 1
    call LongNum.getRightSide 1
    gt
    not
    if-goto LongNum_41
    push constant 1
    neg
    return
    goto LongNum_40
label LongNum_41
label LongNum_40
    goto LongNum_38
label LongNum_39
label LongNum_38
label LongNum_36
    push constant 0
    return
function LongNum.lessThanLong 0
    push argument 0
    pop pointer 0
    push this 0
    push argument 1
    call LongNum.getLeftSide 1
    lt
    not
    if-goto LongNum_43
    push constant 1
    neg
    return
    goto LongNum_42
label LongNum_43
    push this 0
    push argument 1
    call LongNum.getLeftSide 1
    eq
    not
    if-goto LongNum_45
    push this 1
    push argument 1
    call LongNum.getRightSide 1
    lt
    not
    if-goto LongNum_47
    push constant 1
    neg
    return
    goto LongNum_46
label LongNum_47
label LongNum_46
    goto LongNum_44
label LongNum_45
label LongNum_44
label LongNum_42
    push constant 0
    return
function LongNum.lessThanOrEqualLong 0
    push argument 0
    pop pointer 0
    push argument 1
    call LongNum.getRightSide 1
    push constant 0
    eq
    not
    if-goto LongNum_49
    push argument 1
    call LongNum.getLeftSide 1
    push constant 0
    eq
    not
    if-goto LongNum_51
    push constant 1
    neg
    return
    goto LongNum_50
label LongNum_51
label LongNum_50
    goto LongNum_48
label LongNum_49
label LongNum_48
    push this 0
    push argument 1
    call LongNum.getLeftSide 1
    lt
    not
    if-goto LongNum_53
    push constant 1
    neg
    return
    goto LongNum_52
label LongNum_53
    push this 0
    push argument 1
    call LongNum.getLeftSide 1
    eq
    not
    if-goto LongNum_55
    push this 1
    push argument 1
    call LongNum.getRightSide 1
    lt
    not
    if-goto LongNum_57
    push constant 1
    neg
    return
    goto LongNum_56
label LongNum_57
label LongNum_56
    goto LongNum_54
label LongNum_55
label LongNum_54
label LongNum_52
    push constant 0
    return
function LongNum.toString 3
    push argument 0
    pop pointer 0
    push constant 0
    pop local 1
    push constant 5
    call String.new 1
    pop local 2
    push local 2
    push this 1
    call String.setInt 2
    pop temp 0
    push constant 4
    push local 2
    call String.length 1
    sub
    pop local 0
    push this 0
    push constant 0
    gt
    not
    if-goto LongNum_59
    push this 0
    call Output.printInt 1
    pop temp 0
    push constant 0
    pop local 1
label LongNum_60
    push local 1
    push local 0
    lt
    not
    if-goto LongNum_61
    push constant 1
    call String.new 1
    push constant 48
    call String.appendChar 2
    call Output.printString 1
    pop temp 0
    push local 1
    push constant 1
    add
    pop local 1
    goto LongNum_60
label LongNum_61
    goto LongNum_58
label LongNum_59
label LongNum_58
    push this 1
    call Output.printInt 1
    pop temp 0
    push local 0
    call Memory.deAlloc 1
    pop temp 0
    push local 1
    call Memory.deAlloc 1
    pop temp 0
    push local 2
    call Memory.deAlloc 1
    pop temp 0
    push constant 0
    return
function LongNum.dispose 0
    push argument 0
    pop pointer 0
    push pointer 0
    call Memory.deAlloc 1
    pop temp 0
    push constant 0
    return