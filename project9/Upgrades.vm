function Upgrades.new 0
    push constant 6
    call Memory.alloc 1
    pop pointer 0
    push argument 0
    pop this 0
    push argument 1
    pop this 1
    push argument 2
    pop this 2
    push argument 3
    pop this 3
    push argument 4
    pop this 4
    push constant 0
    pop this 5
    push pointer 0
    return
function Upgrades.getCost 0
    push argument 0
    pop pointer 0
    push this 0
    return
function Upgrades.getAmount 0
    push argument 0
    pop pointer 0
    push this 3
    return
function Upgrades.getWorth 0
    push argument 0
    pop pointer 0
    push this 1
    return
function Upgrades.getCPS 0
    push argument 0
    pop pointer 0
    push this 5
    return
function Upgrades.getUpgrade 0
    push argument 0
    pop pointer 0
    push this 0
    push this 0
    push constant 100
    call Math.divide 2
    push constant 1
    add
    push this 2
    push constant 100
    sub
    call Math.multiply 2
    add
    pop this 0
    push this 3
    push constant 1
    add
    pop this 3
    push this 4
    push this 3
    call Math.multiply 2
    pop this 5
    push constant 0
    return