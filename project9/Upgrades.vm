function Upgrades.new 0
    push constant 7
    call Memory.alloc 1
    pop pointer 0
    call LongNum.new 0
    pop this 0
    push this 0
    push argument 0
    call LongNum.addLong 2
    pop temp 0
    call LongNumbers.new 0
    pop this 1
    push argument 1
    pop this 2
    push argument 2
    pop this 3
    push argument 3
    pop this 4
    push argument 4
    pop this 5
    push constant 0
    pop this 6
    push pointer 0
    return
function Upgrades.getCost 0
    push argument 0
    pop pointer 0
    push this 0
    return
function Upgrades.getAmount 0
    push argument 0
    pop pointer 0
    push this 4
    return
function Upgrades.getWorth 0
    push argument 0
    pop pointer 0
    push this 2
    return
function Upgrades.getCPS 0
    push argument 0
    pop pointer 0
    push this 6
    return
function Upgrades.getTotalCount 0
    push argument 0
    pop pointer 0
    push static 0
    return
function Upgrades.getUpgrade 4
    push argument 0
    pop pointer 0
    call LongNum.new 0
    pop local 1
    call LongNum.new 0
    pop local 2
    call LongNum.new 0
    pop local 3
    push local 3
    push this 0
    call LongNum.addLong 2
    pop temp 0
    push local 3
    push this 1
    call LongNumbers.getOneHundred 1
    call LongNum.divideLong 2
    pop temp 0
    push local 2
    push this 1
    call LongNumbers.getOne 1
    call LongNum.addLong 2
    pop temp 0
    push local 2
    push local 3
    call LongNum.addLong 2
    pop temp 0
    push local 1
    push this 1
    call LongNumbers.getFifteen 1
    call LongNum.addLong 2
    pop temp 0
    push local 2
    push local 1
    call LongNum.multiplyLong 2
    pop temp 0
    push this 0
    push local 2
    call LongNum.addLong 2
    pop temp 0
    push this 4
    push constant 1
    add
    pop this 4
    push this 5
    push this 4
    call Math.multiply 2
    pop this 6
    push static 0
    push constant 1
    add
    pop static 0
    push constant 0
    return