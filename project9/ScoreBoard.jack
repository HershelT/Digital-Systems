// Jack program to display the score board of the game
// Including visuals of the cookies and upgrades
class ScoreBoard {
    function void printCookies(LongNum cookies) {
        // do eraseCookieLine();
        // do Memory.deAlloc(1);
        // Display the number of cookies
        do Output.moveCursor(2, 28);
        do cookies.toString();
        return;
    }
    // Erase the cookie line
    function void eraseCookieLine() {
        var int i;
        do Output.moveCursor(2, 28);
        let i = 0;
        while (i < 10) {
            do Output.printString(" ");
            let i = i + 1;
        }
        // Free memory
        do Memory.deAlloc(i);

        return;
    }

    function void printUpgrades(int cps, Upgrades cursors, Upgrades grandmas, Upgrades farms, Upgrades mines, Upgrades warehouses) {
        var int amount;
        // Display Cookies per Second
        do Output.moveCursor(7,25);
        do Output.printString("CPS: ");
        do Output.moveCursor(8, 25);
        do Output.printInt(cps);


        // Output the number of upgrades

        // Output the number of cursors
        do Output.moveCursor(0,0);
        do Output.printString("UPGRADES AMOUNT: ");
        do Output.moveCursor(2, 0);
        do Output.printInt(cursors.getAmount());
        do Output.printString(" Cursors 'C'");
        // Output the number of grandmas
        do Output.moveCursor(3, 0);
        do Output.printInt(grandmas.getAmount());
        do Output.printString(" Grandmas 'G'");
        // Output the number of farms
        do Output.moveCursor(4, 0);
        do Output.printInt(farms.getAmount());
        do Output.printString(" Farms 'F'");
        // Output the number of mines
        do Output.moveCursor(5, 0);
        do Output.printInt(mines.getAmount());
        do Output.printString(" Mines 'M'");
        // Output the number of warehouses
        do Output.moveCursor(6, 0);
        do Output.printInt(warehouses.getAmount());
        do Output.printString(" Warehouses 'W'");

        // Display Costs underneat
        do Output.moveCursor(12, 0);
        do Output.printString("COSTS:");

        // Output the cost of each upgrade

        // output the price of the cursor
        do Output.moveCursor(14, 0);
        do Output.printInt(cursors.getCost());
        // output the price of the grandma
        do Output.moveCursor(16, 0);
        do Output.printInt(grandmas.getCost());
        // output the price of the farm
        do Output.moveCursor(18, 0);
        do Output.printInt(farms.getCost());
        // output the price of the mine
        do Output.moveCursor(19, 0);
        do Output.printInt(mines.getCost());
        // output the price of the warehouse
        do Output.moveCursor(21, 0);
        do Output.printInt(warehouses.getCost());



        // Draw as many cursors as we have
        let amount = 0;
        while (amount < cursors.getAmount()) {
            do UpgradeDrawings.drawCursor((32*10*16) + amount + 3);
            let amount = amount + 1;
        }
        // Draw as many grandmas as we have
        let amount = 0;
        while (amount < grandmas.getAmount()) {
            do UpgradeDrawings.drawGrandma((32*11*16+64) + amount + 3);
            let amount = amount + 1;
        }
        // Draw as many farms as we have
        let amount = 0;
        while (amount < farms.getAmount()) {
            do UpgradeDrawings.drawFarm((32*12*16+64) + amount + 3);
            let amount = amount + 1;
        }
        // Draw as many mines as we have
        let amount = 0;
        while (amount < mines.getAmount()) {
            do UpgradeDrawings.drawMine((32*13*16+64) + amount + 3);
            let amount = amount + 1;
        }
        // Draw as many warehouses as we have
        let amount = 0;
        while (amount < warehouses.getAmount()) {
            do UpgradeDrawings.drawWarehouse((32*14*16+64) + amount + 3);
            let amount = amount + 1;
        }

        // Free memory
        do Memory.deAlloc(amount);

        return;
    }
    
}